#include<iostream>
#include"DataStructure.h"
using namespace std;


// 初始map
//void init() {
//	// 文法初始化
//	/*G[0]["A"] = 'S';
//	G[1].insert(map<string,char>::value_type("f=B", 'A'));
//	G[2]["C"] = 'B';
//	G[3].insert("BGD", "B");
//	G[4].insert("D", "C");
//	G[5].insert("CHD", "C");
//	G[6].insert("f", "D");
//	G[7].insert("e", "D");
//	G[8].insert("(B)", "D");
//	G[9].insert("+", "G");
//	G[10].insert("-", "G");
//	G[11].insert("*", "H");
//	G[12].insert("/", "H");*/
//
//
//	G[0]["A"] = 'S';
//	G[1]["f=B"] = 'A';
//	G[2]["C"] = 'B';
//	G[3]["BGD"] = 'B';
//	G[4]["D"] = 'C';
//	G[5]["CHD"] = 'C';
//	G[6]["f"] = 'D';
//	G[7]["e"] = 'D';
//	G[8]["(B)"] = 'D';
//	G[9]["+"] = 'G';
//	G[10]["-"] = 'G';
//	G[11]["*"] = 'H';
//	G[12]["/"] = 'H';
//
//	// LR分析表初始化
//	/*SLR[0].insert("f", "2");
//	SLR[0].insert("A","1" );
//	SLR[1].insert("#", "acc");
//	SLR[2].insert("=", "3");
//	SLR[3].insert("f", "7");
//	SLR[3].insert("e", "8");
//	SLR[3].insert("(", "9");
//	SLR[3].insert("B", "4");
//	SLR[3].insert("C", "5");
//	SLR[3].insert("D", "6");
//	SLR[4].insert("+", "11");
//	SLR[4].insert("-", "12");
//	SLR[4].insert("#", "r1");
//	SLR[4].insert("G", "10");
//	SLR[5].insert(")", "r2");
//	SLR[5].insert("+", "r2");
//	SLR[5].insert("-", "r2");
//	SLR[5].insert("*", "14");
//	SLR[5].insert("/", "15");
//	SLR[5].insert("#", "r2");
//	SLR[5].insert("H", "13");
//	SLR[6].insert(")", "r4");
//	SLR[6].insert("+", "r4");
//	SLR[6].insert("-", "r4");
//	SLR[6].insert("*", "r4");
//	SLR[6].insert("/", "r4");
//	SLR[6].insert("#", "r4");
//	SLR[7].insert(")", "r6");
//	SLR[7].insert("+", "r6");
//	SLR[7].insert("-", "r6");
//	SLR[7].insert("*", "r6");
//	SLR[7].insert("/", "r6");
//	SLR[7].insert("#", "r6");
//	SLR[8].insert(")", "r7");
//	SLR[8].insert("+", "r7");
//	SLR[8].insert("-", "r7");
//	SLR[8].insert("*", "r7");
//	SLR[8].insert("/", "r7");
//	SLR[8].insert("#", "r7");
//	SLR[9].insert("f", "7");
//	SLR[9].insert("e", "8");
//	SLR[9].insert("(", "9");
//	SLR[9].insert("B", "16");
//	SLR[9].insert("C", "5");
//	SLR[9].insert("D", "6");
//	SLR[10].insert("f", "7");
//	SLR[10].insert("e", "8");
//	SLR[10].insert("(", "9");
//	SLR[10].insert("D", "17");
//	SLR[11].insert("f", "r9");
//	SLR[11].insert("e", "r9");
//	SLR[11].insert("(", "r9");
//	SLR[12].insert("f", "r10");
//	SLR[12].insert("e", "r10");
//	SLR[12].insert("(", "r10");
//	SLR[13].insert("f", "7");
//	SLR[13].insert("e", "8");
//	SLR[13].insert("(", "9");
//	SLR[13].insert("D", "18");
//	SLR[14].insert("f", "r11");
//	SLR[14].insert("e", "r11");
//	SLR[14].insert("(", "r11");
//	SLR[15].insert("f", "r12");
//	SLR[15].insert("e", "r12");
//	SLR[15].insert("(", "r12");
//	SLR[16].insert(")", "19");
//	SLR[16].insert("+", "11");
//	SLR[16].insert("-", "12");
//	SLR[16].insert("G", "10");
//	SLR[17].insert(")", "r3");
//	SLR[17].insert("+", "r3");
//	SLR[17].insert("-", "r3");
//	SLR[17].insert("#", "r3");
//	SLR[18].insert(")", "r5");
//	SLR[18].insert("+", "r5");
//	SLR[18].insert("-", "r5");
//	SLR[18].insert("*", "r5");
//	SLR[18].insert("/", "r5");
//	SLR[18].insert("#", "r5");
//	SLR[19].insert(")", "r8");
//	SLR[19].insert("+", "r8");
//	SLR[19].insert("-", "r8");
//	SLR[19].insert("*", "r8");
//	SLR[19].insert("/", "r8");
//	SLR[19].insert("#", "r8");*/
//
//	// LR分析表初始化，四位数的表示规约，其整数值减去1000，就是所使用的产生式的标号
//	/*SLR[0].insert("f", "2");
//	SLR[0].insert("A", "1");
//	SLR[1].insert("#", "-1");
//	SLR[2].insert("=", "3");
//	SLR[3].insert("f", "7");
//	SLR[3].insert("e", "8");
//	SLR[3].insert("(", "9");
//	SLR[3].insert("B", "4");
//	SLR[3].insert("C", "5");
//	SLR[3].insert("D", "6");
//	SLR[4].insert("+", "11");
//	SLR[4].insert("-", "12");
//	SLR[4].insert("#", "1001");
//	SLR[4].insert("G", "10");
//	SLR[5].insert(")", "1002");
//	SLR[5].insert("+", "1002");
//	SLR[5].insert("-", "1002");
//	SLR[5].insert("*", "14");
//	SLR[5].insert("/", "15");
//	SLR[5].insert("#", "1002");
//	SLR[5].insert("H", "13");
//	SLR[6].insert(")", "1004");
//	SLR[6].insert("+", "1004");
//	SLR[6].insert("-", "1004");
//	SLR[6].insert("*", "1004");
//	SLR[6].insert("/", "1004");
//	SLR[6].insert("#", "1004");
//	SLR[7].insert(")", "1006");
//	SLR[7].insert("+", "1006");
//	SLR[7].insert("-", "1006");
//	SLR[7].insert("*", "1006");
//	SLR[7].insert("/", "1006");
//	SLR[7].insert("#", "1006");
//	SLR[8].insert(")", "1007");
//	SLR[8].insert("+", "1007");
//	SLR[8].insert("-", "1007");
//	SLR[8].insert("*", "1007");
//	SLR[8].insert("/", "1007");
//	SLR[8].insert("#", "1007");
//	SLR[9].insert("f", "7");
//	SLR[9].insert("e", "8");
//	SLR[9].insert("(", "9");
//	SLR[9].insert("B", "16");
//	SLR[9].insert("C", "5");
//	SLR[9].insert("D", "6");
//	SLR[10].insert("f", "7");
//	SLR[10].insert("e", "8");
//	SLR[10].insert("(", "9");
//	SLR[10].insert("D", "17");
//	SLR[11].insert("f", "1009");
//	SLR[11].insert("e", "1009");
//	SLR[11].insert("(", "1009");
//	SLR[12].insert("f", "1010");
//	SLR[12].insert("e", "1010");
//	SLR[12].insert("(", "1010");
//	SLR[13].insert("f", "7");
//	SLR[13].insert("e", "8");
//	SLR[13].insert("(", "9");
//	SLR[13].insert("D", "18");
//	SLR[14].insert("f", "1011");
//	SLR[14].insert("e", "1011");
//	SLR[14].insert("(", "1011");
//	SLR[15].insert("f", "1012");
//	SLR[15].insert("e", "1012");
//	SLR[15].insert("(", "1012");
//	SLR[16].insert(")", "19");
//	SLR[16].insert("+", "11");
//	SLR[16].insert("-", "12");
//	SLR[16].insert("G", "10");
//	SLR[17].insert(")", "1003");
//	SLR[17].insert("+", "1003");
//	SLR[17].insert("-", "1003");
//	SLR[17].insert("#", "1003");
//	SLR[18].insert(")", "1005");
//	SLR[18].insert("+", "1005");
//	SLR[18].insert("-", "1005");
//	SLR[18].insert("*", "1005");
//	SLR[18].insert("/", "1005");
//	SLR[18].insert("#", "1005");
//	SLR[19].insert(")", "1008");
//	SLR[19].insert("+", "1008");
//	SLR[19].insert("-", "1008");
//	SLR[19].insert("*", "1008");
//	SLR[19].insert("/", "1008");
//	SLR[19].insert("#", "1008");*/
//
//	SLR[0]['f'] = 2;
//	SLR[0]['A'] = 1;
//	SLR[1]['#'] = -1;
//	SLR[2]['='] = 3;
//	SLR[3]['f'] = 7;
//	SLR[3]['e'] = 8;
//	SLR[3]['('] = 9;
//	SLR[3]['B'] = 4;
//	SLR[3]['C'] = 5;
//	SLR[3]['D'] = 6;
//	SLR[4]['+'] = 11;
//	SLR[4]['-'] = 12;
//	SLR[4]['#'] = 1001;
//	SLR[4]['G'] = 10;
//	SLR[5][')'] = 1002;
//	SLR[5]['+'] = 1002;
//	SLR[5]['-'] = 1002;
//	SLR[5]['*'] = 14;
//	SLR[5]['/'] = 15;
//	SLR[5]['#'] = 1002;
//	SLR[5]['H'] = 13;
//	SLR[6][')'] = 1004;
//	SLR[6]['+'] = 1004;
//	SLR[6]['-'] = 1004;
//	SLR[6]['*'] = 1004;
//	SLR[6]['/'] = 1004;
//	SLR[6]['#'] = 1004;
//	SLR[7][')'] = 1006;
//	SLR[7]['+'] = 1006;
//	SLR[7]['-'] = 1006;
//	SLR[7]['*'] = 1006;
//	SLR[7]['/'] = 1006;
//	SLR[7]['#'] = 1006;
//	SLR[8][')'] = 1007;
//	SLR[8]['+'] = 1007;
//	SLR[8]['-'] = 1007;
//	SLR[8]['*'] = 1007;
//	SLR[8]['/'] = 1007;
//	SLR[8]['#'] = 1007;
//	SLR[9]['f'] = 7;
//	SLR[9]['e'] = 8;
//	SLR[9]['('] = 9;
//	SLR[9]['B'] = 16;
//	SLR[9]['C'] = 5;
//	SLR[9]['D'] = 6;
//	SLR[10]['f'] = 7;
//	SLR[10]['e'] = 8;
//	SLR[10]['('] = 9;
//	SLR[10]['D'] = 17;
//	SLR[11]['f'] = 1009;
//	SLR[11]['e'] = 1009;
//	SLR[11]['('] = 1009;
//	SLR[12]['f'] = 1010;
//	SLR[12]['e'] = 1010;
//	SLR[12]['('] = 1010;
//	SLR[13]['f'] = 7;
//	SLR[13]['e'] = 8;
//	SLR[13]['('] = 9;
//	SLR[13]['D'] = 18;
//	SLR[14]['f'] = 1011;
//	SLR[14]['e'] = 1011;
//	SLR[14]['('] = 1011;
//	SLR[15]['f'] = 1012;
//	SLR[15]['e'] = 1012;
//	SLR[15]['('] = 1012;
//	SLR[16][')'] = 19;
//	SLR[16]['+'] = 11;
//	SLR[16]['-'] = 12;
//	SLR[16]['G'] = 10;
//	SLR[17][')'] = 1003;
//	SLR[17]['+'] = 1003;
//	SLR[17]['-'] = 1003;
//	SLR[17]['#'] = 1003;
//	SLR[18][')'] = 1005;
//	SLR[18]['+'] = 1005;
//	SLR[18]['-'] = 1005;
//	SLR[18]['*'] = 1005;
//	SLR[18]['/'] = 1005;
//	SLR[18]['#'] = 1005;
//	SLR[19][')'] = 1008;
//	SLR[19]['+'] = 1008;
//	SLR[19]['-'] = 1008;
//	SLR[19]['*'] = 1008;
//	SLR[19]['/'] = 1008;
//	SLR[19]['#'] = 1008;
//
//}